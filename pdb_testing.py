import pdb
def find_max(numbers):
    '''–ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ —Ñ—É–Ω–∫—Ü—ñ—è¬†`find_max()`¬†–∑–Ω–∞—Ö–æ–¥–∏—Ç—å —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ —á–∏—Å–ª–æ –≤ —Å–ø–∏—Å–∫—É —Ü—ñ–ª–∏—Ö —á–∏—Å–µ–ª.
–û–¥–Ω–∞–∫ —É —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó —î –±–∞–≥, —á–µ—Ä–µ–∑ —è–∫–∏–π –º–∏ –æ—Ç—Ä–∏–º—É—î–º–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞–±–æ –ø–æ–º–∏–ª–∫—É.
–¢–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è:
1. –í–∏–∑–Ω–∞—á —Ç–∞ –≤–∏–ø—Ä–∞–≤ –ø–æ–º–∏–ª–∫—É —É —Ñ—É–Ω–∫—Ü—ñ—ó¬†`find_max()`.
2. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–ª—è –∑–∞–¥–∞–Ω–∏—Ö —Ç–µ—Å—Ç—ñ–≤.
3. –†–æ–∑–≥–ª—è–Ω—å –∫—Ä–∞–π–æ–≤—ñ –≤–∏–ø–∞–¥–∫–∏, —Ç–∞–∫—ñ —è–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π —Å–ø–∏—Å–æ–∫.
üí° –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É –Ω–∞ —Ç–µ, —è–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è —Ç–∞ –ø–æ—Ä—ñ–≤–Ω—é—î—Ç—å—Å—è –∑–º—ñ–Ω–Ω–∞¬†`max_num`¬†—É —Ü–∏–∫–ª—ñ.
**–†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ —Ç–æ–±—ñ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ —Ä–æ–∑–≤'—è–∑–∞—Ç–∏ —Ü—é –∑–∞–¥–∞—á—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –≤–∏–≤—á–µ–Ω–∏—Ö —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ –¥–µ–±–∞–≥—ñ–Ω–≥—É —É PyCharm.**
'''
    max_num = int(numbers[0])
    pdb.set_trace()
    for num in numbers:
       pdb.set_trace()
       if max_num < int(num):
            max_num = int(num)
    return max_num
string_int_numbers = input("–í–≤–µ–¥—ñ—Ç—å —Å–ø–∏—Å–æ–∫ —Ü—ñ–ª–∏—Ö —á–∏—Å–µ–ª\n")
list_numbers = string_int_numbers.split(", ")
print(f"–ú–∞–∫—Å. —á–∏—Å–ª–æ: {find_max(list_numbers)}")
